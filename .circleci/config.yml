# Ruby CircleCI 2.1 configuration file
#
# Check https://circleci.com/docs/2.0/ruby/ for more details
#
version: 2.1 


orbs:
  ruby: circleci/ruby@0.1.2 # Ruby orb registry: https://circleci.com/orbs/registry/orb/circleci/ruby

jobs: 
  build: 
    docker: 
      - image: circleci/ruby:2.5.1-stretch-node
    steps: 
      - checkout
      - run: 
          name: Which bundler?
          command: bundle -v
      - ruby/bundle-install

      # This is based on your 1.0 configuration file or project settings
      - run: bundle exec rake db:create db:schema:load --trace
      # Test
      #   This would typically be a build job when using workflows, possibly combined with build
      # The following line was run implicitly in your 1.0 builds based on what CircleCI inferred about the structure of your project. In 2.0 you need to be explicit about which commands should be run. In some cases you can discard inferred commands if they are not relevant to your project.
      - run:
          command: bundle exec rspec --format progress $(circleci tests glob spec/**/*_spec.rb | circleci tests split)
          environment:
            RAILS_ENV: test
            RACK_ENV: test
      # Teardown
      #   If you break your build into multiple jobs with workflows, you will probably want to do the parts of this that are relevant in each
      # Save test results
      - store_test_results:
          path: /tmp/circleci-test-results
      # Save artifacts
      - store_artifacts:
          path: /tmp/circleci-artifacts
      - store_artifacts:
          path: /tmp/circleci-test-results

# What to do next? Set up a test job. Please see 
# https://circleci.com/docs/2.0/configuration-reference/, for more  info on how to get started.
